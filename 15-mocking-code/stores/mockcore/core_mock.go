// Code generated by MockGen. DO NOT EDIT.
// Source: core.go
//
// Generated by this command:
//
//	mockgen -source core.go -destination mockcore/core_mock.go -package mockcore
//
// Package mockcore is a generated GoMock package.
package mockcore

import (
	stores "mocking-cod/stores"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStorer is a mock of Storer interface.
type MockStorer struct {
	ctrl     *gomock.Controller
	recorder *MockStorerMockRecorder
}

// MockStorerMockRecorder is the mock recorder for MockStorer.
type MockStorerMockRecorder struct {
	mock *MockStorer
}

// NewMockStorer creates a new mock instance.
func NewMockStorer(ctrl *gomock.Controller) *MockStorer {
	mock := &MockStorer{ctrl: ctrl}
	mock.recorder = &MockStorerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorer) EXPECT() *MockStorerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockStorer) Create(usr stores.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", usr)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockStorerMockRecorder) Create(usr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockStorer)(nil).Create), usr)
}

// Delete mocks base method.
func (m *MockStorer) Delete(usr stores.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", usr)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockStorerMockRecorder) Delete(usr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockStorer)(nil).Delete), usr)
}

// Update mocks base method.
func (m *MockStorer) Update(usr stores.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", usr)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockStorerMockRecorder) Update(usr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockStorer)(nil).Update), usr)
}
